body {
    padding-top: 5vw;
}

form {
    margin: auto;
}

form,
md-autocomplete {
    width: 900px;
}

md-autocomplete button md-icon {
    z-index: 100;
}

md-autocomplete.invalid-value input {
    color: red !important;
}

.autocomplete-search {
    cursor: pointer;
    position: absolute;
    right: 0;
    top: 0;
}

.md-autocomplete-suggestions a {
    text-decoration: underline;
}

.test-input {
    display: block;
    width: 100%;
    transition: background 0.3s ease-out;
    padding: 5px;
    margin-bottom: 0.5rem;
    border: 1px gray solid;
}

.test-input:focus {
    outline: 0;
    border: 1px solid blue;
    background: #EBEBEB;
}

.clear-autocomplete {
    position: absolute;
    top: 10% !important;
    right: 20px !important;
    visibility: hidden;
    opacity: 0;
    transition: visibility 0s, opacity 0.25s linear;
}


md-autocomplete.md-default-theme button.clear-autocomplete:after,
md-autocomplete button.clear-autocomplete:after {
    background: none;
}

.clear-autocomplete.visible {
    visibility: visible;
    opacity: 1;
    cursor: pointer;
}

.clear-autocomplete i {
    font-size: 20px;
}

.clear-autocomplete {
    cursor: pointer;
    -webkit-user-select: none;
}

.hidden {
    display: none !important;
}

[md-highlight-text] .highlight {
    color: red !important;
    font-weight: bold;
}

md-autocomplete input:focus {
    color: rgba(0,0,0,0.87) !important;
}

md-autocomplete md-input-container .md-input {
    color: transparent;
}

md-autocomplete.error input {
    color: red !important;
}

md-autocomplete.valid-value input {
    color: transparent !important;
}

.autocomplete-popover {
    position: absolute;
    -webkit-user-select: none;
    -moz-user-select: none;
    user-select: none;
    left: 15px;
    top: 12px;
    font-size: 14px;
    transition: color 0.3s ease-in-out;
}

[md-floating-label] .autocomplete-popover {
    left: 4px;
    top: 26px;
    font-size: 16px;
    text-decoration: underline;
    color: #608DA0;
}

.autocomplete-popover:hover {
    color: orange;
    text-decoration: underline;
    text-decoration-style: dashed;
    -webkit-text-decoration-style: dashed;
    cursor: pointer;
}

.hint {
    font-size: 12px;
    line-height: 14px;
    color: grey;
    transition: all 0.3s cubic-bezier(0.55, 0, 0.55, 0.2);
}

.hint-info {
    position: absolute;
    left: 2px;
    right: auto;
    bottom: 7px;
    color: gray !important;
}

.ng-invalid .hint {
    color: red;
    margin-top: 3px;
}

.hint.ng-hide,
.hint.ng-enter,
.hint.ng-leave.ng-leave-active {
    bottom: 26px;
    opacity: 0;
}

.hint.ng-leave,
.hint.ng-enter.ng-enter-active {
    bottom: 7px;
    opacity: 1;
}

/* ================================================================================ */
/* styles to disable focus in readonly mode */
/* ================================================================================ */
mx-picker-new md-autocomplete[readonly] md-input-container label {
    -webkit-transform: translate3d(0, 28px, 0) scale(1) !important;
    transform: translate3d(0, 28px, 0) scale(1) !important;
    transition: -webkit-transform cubic-bezier(0.25, 0.8, 0.25, 1) 0.4s, width cubic-bezier(0.25, 0.8, 0.25, 1) 0.4s !important;
    transition: transform cubic-bezier(0.25, 0.8, 0.25, 1) 0.4s, width cubic-bezier(0.25, 0.8, 0.25, 1) 0.4s !important;
    width: auto !important;
}

mx-picker-new md-autocomplete[readonly] md-input-container input {
    border-bottom-width: 1px !important;
    border-color: rgba(0,0,0,0.12) !important;
}

mx-picker-new md-autocomplete[readonly] md-input-container label,
mx-picker-new md-autocomplete[readonly] md-input-container label:after {
    color: gray !important;
}

mx-picker-new md-autocomplete[readonly] md-input-container.md-input-has-value label,
mx-picker-new md-autocomplete[readonly] md-input-container.md-input-has-value label:after {
    color: transparent !important;
}
/* ================================================================================ */


